## 包名
package ${config.basePackage}.${config.servicePackageName};

## import 依赖
#foreach($import in $controller.dtoImports)
import $import;
#end
import ${config.basePackage}.${config.dtoPackageName}.*;
import java.util.List;

/**
 * @InterfaceName ${controller.serviceName}
 * @Description ${controller.description}
 * @Author api-codegen
 **/
public interface ${controller.serviceName} {

#if($controller.handlerMethods)
#foreach($handlerMethod in $controller.handlerMethods)

    /**
     * $handlerMethod.summary @Summary
     * $handlerMethod.description @Description
     *
#foreach($handlerMethodParam in $handlerMethod.handlerMethodParams)
     * @param ${handlerMethodParam.name} ${handlerMethodParam.description}
#end
## 如果返回类型不为void，则需要增加描述
#if($handlerMethod.handlerMethodReturn.isNotVoid())
     * @return ${handlerMethod.handlerMethodReturn.description}
     */
#else
     */
#end
    public $handlerMethod.handlerMethodReturn.type ${handlerMethod.methodName}(#if($handlerMethod.handlerMethodParams)#foreach($handlerMethodParam in $handlerMethod.handlerMethodParams)
#if($handlerMethodParam.tag == 3)##路径参数
$handlerMethodParam.type $handlerMethodParam.name#if($velocityCount<$handlerMethod.handlerMethodParams.size()),
            #end
#elseif($handlerMethodParam.tag == 2)##请求体参数
$handlerMethodParam.type ${handlerMethodParam.name}#if($velocityCount<$handlerMethod.handlerMethodParams.size()),
            #end
#elseif($handlerMethodParam.tag == 1)##查询参数
$handlerMethodParam.type ${handlerMethodParam.name}#if($velocityCount<$handlerMethod.handlerMethodParams.size()),
            #end
#end#end#end);
#end
#end


}